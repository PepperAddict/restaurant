{"version":3,"sources":["index.js"],"names":["restaurants","neighborhoods","cuisines","newMap","markers","apikey","document","addEventListener","event","initMap","fetchNeighborhoods","fetchCuisines","DBHelper","error","console","self","fillNeighborhoodsHTML","select","getElementById","forEach","option","createElement","innerHTML","neighborhood","value","append","fillCuisinesHTML","cuisine","L","map","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","updateRestaurants","mapFallback","mapF","className","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","ul","marker","remove","length","li","createRestaurantHTML","restaurant","addMarkersToMap","name","text","picture","webpimg","srcset","imageUrlForRestaurant","type","imgt","img","alt","src","appendChild","href","urlForRestaurant","address","link","more","mapMarkerForMain","on","onClick","window","location","options","url","push","fullrestaurants","all","getElementsByTagName","i"],"mappings":"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","file":"index.js","sourcesContent":["\r\nlet restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar newMap\r\nvar markers = []\r\nlet apikey = 'pk.eyJ1IjoicGVwcGVyYWRkaWN0IiwiYSI6ImNqa3Y4YmtwdTBvazAza3BhZ20zYnE2aXoifQ.QIBC0lqNjFdfDDL4Qq_neA';\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  initMap();\r\n  fetchNeighborhoods();\r\n  fetchCuisines();\r\n\r\n});\r\n\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nfetchNeighborhoods = () => {\r\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) { // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nfillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nfetchCuisines = () => {\r\n  DBHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nfillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Initialize leaflet map, called from HTML.\r\n */\r\ninitMap = () => {\r\n  self.newMap = L.map('map', {\r\n        center: [40.722216, -73.987501],\r\n        zoom: 12,\r\n        scrollWheelZoom: false\r\n      });\r\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\r\n    mapboxToken: apikey,\r\n    maxZoom: 18,\r\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n      '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n      'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n    id: 'mapbox.light',\r\n\r\n  }).addTo(newMap);\r\n\r\n  updateRestaurants();\r\n}\r\nmapFallback = () => {\r\n  const mapF = document.getElementById(\"map\")\r\n  mapF.innerHTML = \"Sorry, this map application could not be loaded\";\r\n  mapF.className = 'mapFallback'\r\n}\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nupdateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nresetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n\r\n  // Remove all map markers\r\n  if (self.markers) {\r\n    self.markers.forEach(marker => marker.remove());\r\n  }\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nfillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const ul = document.getElementById('restaurants-list');\r\n  if (restaurants.length == 0 ) {\r\n    const li = document.createElement('li');\r\n    li.className = 'noshow'\r\n    li.innerHTML = 'Sorry! There\\'s nothing here. Try a different option.'\r\n\r\n    ul.append(li)\r\n  }\r\n  restaurants.forEach(restaurant => {\r\n    ul.append(createRestaurantHTML(restaurant));\r\n  });\r\n  addMarkersToMap();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\ncreateRestaurantHTML = (restaurant) => {\r\n\r\n  const li = document.createElement('li');\r\n\r\n  const name = document.createElement('h3');\r\n  name.className = 'fp-r-name';\r\n  name.innerHTML = restaurant.name;\r\n  li.append(name);\r\n  \r\n  const text = document.createElement('a');\r\n  const picture = document.createElement('picture');\r\n\r\n  const webpimg = document.createElement('source');  \r\n  webpimg.srcset = DBHelper.imageUrlForRestaurant(restaurant) + '.webp';\r\n  webpimg.type = 'image/webp';\r\n  const imgt = document.createElement('source');\r\n  imgt.srcset = DBHelper.imageUrlForRestaurant(restaurant) + '.jpg';\r\n  imgt.type = 'image/jpeg';\r\n  const img = document.createElement('img');\r\n  \r\n\r\n\r\n  img.alt = `Image of ${restaurant.name} in ${restaurant.neighborhood}`;\r\n\r\n  img.src = DBHelper.imageUrlForRestaurant(restaurant) + '.jpg';\r\n\r\n  \r\n\r\n  picture.appendChild(webpimg);\r\n  picture.appendChild(imgt)\r\n  picture.appendChild(img)\r\n\r\n  picture.className = 'restaurant-img';\r\n\r\n  text.href = DBHelper.urlForRestaurant(restaurant);\r\n  text.appendChild(picture);\r\n  li.append(text);\r\n\r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.className = 'fp-neighborhood';\r\n  neighborhood.innerHTML = ` ${restaurant.neighborhood}`;\r\n  li.append(neighborhood);\r\n\r\n  const address = document.createElement('p');\r\n  address.className = 'fp-address';\r\n  address.innerHTML = `Address: ${restaurant.address}`;\r\n  li.append(address);\r\n\r\n  const link = document.createElement('p');\r\n  link.className = 'link';\r\n  const more = document.createElement('a');\r\n  more.innerHTML =  restaurant.name + '\\'s full details';\r\n  more.href = DBHelper.urlForRestaurant(restaurant);\r\n  link.appendChild(more);\r\n  li.append(link)\r\n\r\n\r\n\r\n  return li\r\n}\r\n\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\naddMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForMain(restaurant, self.newMap);\r\n    marker.on(\"click\", onClick);\r\n    function onClick() {\r\n      window.location.href = marker.options.url;\r\n    }\r\n    self.markers.push(marker);\r\n  });\r\n\r\n} \r\n\r\n//reset filter\r\nfullrestaurants = () => {\r\n  const all = document.getElementsByTagName('select');\r\n  for (let i of all) {\r\n    i.selectedIndex = 0; \r\n  }\r\n    \r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cuisine = cSelect.value;\r\n  const neighborhood = nSelect.value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) {\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n    }\r\n  })\r\n  \r\n}"]}