{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","restMap","apikey","document","addEventListener","event","initMap","fetchRestaurantFromURL","error","console","mapFallback","self","L","map","center","latlng","lat","lng","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","mapF","getElementById","innerHTML","className","fillRestaurantHTML","title","name","address","image","webpimg","createElement","img","imgt","srcset","imageUrlForRestaurant","type","alt","neighborhood","src","appendChild","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","key","row","day","time","breadcrumb","serverport","ADDRESS","fetchRestaurants","restaurants","log","names","Object","entries","forEach","value","li","a","href","target","uri","query","querySelectorAll","i","callback","getParameterByName","fetchRestaurantById","reviews","container","noReviews","ul","createReviewHTML","review","date","rating","comments","url","window","location","replace","regex","RegExp","results","exec","decodeURIComponent"],"mappings":";;;;AAAA,IAAIA,mBAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,SAAS,kGAAb;;AAEA;;;AAGAC,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,UAACC,KAAD,EAAW;AACvDC;AACD,CAFD;;AAIA;;;AAGAA,UAAU,mBAAM;AACdC,yBAAuB,UAACC,KAAD,EAAQR,UAAR,EAAuB;AAC5C,QAAIQ,KAAJ,EAAW;AAAE;AACXC,cAAQD,KAAR,CAAcA,KAAd;AACAE;AACD,KAHD,MAGO;AACLC,WAAKV,OAAL,GAAeW,EAAEC,GAAF,CAAM,KAAN,EAAa;AAC1BC,gBAAQ,CAACd,WAAWe,MAAX,CAAkBC,GAAnB,EAAwBhB,WAAWe,MAAX,CAAkBE,GAA1C,CADkB;AAE1BC,cAAM,EAFoB;AAG1BC,yBAAiB;AAHS,OAAb,CAAf;AAKAP,QAAEQ,SAAF,CAAY,mFAAZ,EAAiG;AAC/FC,qBAAanB,MADkF;AAE/FoB,iBAAS,EAFsF;AAG/FC,qBAAa,8FACb,0EADa,GAEb,wDAL+F;AAM/FC,YAAI;;AAN2F,OAAjG,EAQGC,KARH,CAQSxB,OART;;AAUAyB;AACAC,eAASC,sBAAT,CAAgCjB,KAAKX,UAArC,EAAiDW,KAAKV,OAAtD;AACD;AACF,GAvBD;AAwBD,CAzBD;AA0BAS,cAAc,uBAAM;AAClB,MAAMmB,OAAO1B,SAAS2B,cAAT,CAAwB,KAAxB,CAAb;AACAD,OAAKE,SAAL,GAAiB,iDAAjB;AACAF,OAAKG,SAAL,GAAiB,aAAjB;AACD,CAJD;;AAOA;;;AAGAC,qBAAqB,8BAAkC;AAAA,MAAjCjC,UAAiC,uEAApBW,KAAKX,UAAe;;AACrDG,WAAS+B,KAAT,GAAiBlC,WAAWmC,IAAX,GAAkB,iBAAnC;AACA,MAAMA,OAAOhC,SAAS2B,cAAT,CAAwB,WAAxB,CAAb;AACAK,OAAKJ,SAAL,GAAiB/B,WAAWmC,IAA5B;;AAEA,MAAMC,UAAUjC,SAAS2B,cAAT,CAAwB,cAAxB,CAAhB;AACAM,UAAQL,SAAR,iBAAgC/B,WAAWoC,OAA3C;;AAEA,MAAMC,QAAQlC,SAAS2B,cAAT,CAAwB,UAAxB,CAAd;AACA,MAAMQ,UAAUnC,SAASoC,aAAT,CAAuB,QAAvB,CAAhB;AACA,MAAMC,MAAMrC,SAASoC,aAAT,CAAuB,KAAvB,CAAZ;AACA,MAAME,OAAOtC,SAASoC,aAAT,CAAuB,QAAvB,CAAb;AACAD,UAAQI,MAAR,GAAiBf,SAASgB,qBAAT,CAA+B3C,UAA/B,IAA6C,OAA9D;AACAsC,UAAQM,IAAR,GAAe,YAAf;AACAH,OAAKC,MAAL,GAAcf,SAASgB,qBAAT,CAA+B3C,UAA/B,IAA6C,MAA3D;AACAyC,OAAKG,IAAL,GAAY,YAAZ;;AAEAJ,MAAIK,GAAJ,iBAAsB7C,WAAWmC,IAAjC,YAA4CnC,WAAW8C,YAAvD;AACAN,MAAIO,GAAJ,GAAUpB,SAASgB,qBAAT,CAA+B3C,UAA/B,IAA6C,MAAvD;AACAqC,QAAMW,WAAN,CAAkBV,OAAlB;AACAD,QAAMW,WAAN,CAAkBP,IAAlB;AACAJ,QAAMW,WAAN,CAAkBR,GAAlB;;AAIA,MAAMS,UAAU9C,SAAS2B,cAAT,CAAwB,cAAxB,CAAhB;AACAmB,UAAQlB,SAAR,GAAoB/B,WAAWkD,YAA/B;;AAEA;AACA,MAAIlD,WAAWmD,eAAf,EAAgC;AAC9BC;AACD;AACD;AACAC;AACD,CAlCD;;AAoCA;;;AAGAD,0BAA0B,mCAAsD;AAAA,MAArDE,cAAqD,uEAApC3C,KAAKX,UAAL,CAAgBmD,eAAoB;;AAC9E,MAAMI,QAAQpD,SAAS2B,cAAT,CAAwB,YAAxB,CAAd;AACA,OAAK,IAAI0B,GAAT,IAAgBF,cAAhB,EAAgC;AAC9B,QAAMG,MAAMtD,SAASoC,aAAT,CAAuB,IAAvB,CAAZ;;AAEA,QAAMmB,MAAMvD,SAASoC,aAAT,CAAuB,IAAvB,CAAZ;AACAmB,QAAI3B,SAAJ,GAAgByB,GAAhB;AACAC,QAAIT,WAAJ,CAAgBU,GAAhB;;AAEA,QAAMC,OAAOxD,SAASoC,aAAT,CAAuB,IAAvB,CAAb;AACAoB,SAAK5B,SAAL,GAAiBuB,eAAeE,GAAf,CAAjB;AACAC,QAAIT,WAAJ,CAAgBW,IAAhB;;AAEAJ,UAAMP,WAAN,CAAkBS,GAAlB;AACD;AACF,CAfD;;AAkBA;;;AAGA/B,iBAAiB,0BAAgC;AAAA,MAA/B1B,UAA+B,uEAApBW,KAAKX,UAAe;;AAC/C,MAAM4D,aAAazD,SAAS2B,cAAT,CAAwB,YAAxB,CAAnB;AACA,MAAM+B,0BAAwBlC,SAASmC,OAAjC,MAAN;AACAnC,WAASoC,gBAAT,CAA0B,UAACvD,KAAD,EAAQwD,WAAR,EAAwB;AAChD,QAAIxD,KAAJ,EACIC,QAAQwD,GAAR,CAAYzD,KAAZ,EADJ,KAEK;AACH,UAAM0D,QAAQC,OAAOC,OAAP,CAAeJ,WAAf,EAA4BK,OAA5B,CACZ,gBAAkB;AAAA;AAAA,YAAhBb,GAAgB;AAAA,YAAXc,KAAW;;AAEhB,YAAMC,KAAKpE,SAASoC,aAAT,CAAuB,IAAvB,CAAX;AACA,YAAMiC,IAAIrE,SAASoC,aAAT,CAAuB,GAAvB,CAAV;AACAiC,UAAEzC,SAAF,QAAiBuC,MAAMnC,IAAvB;AACAqC,UAAEC,IAAF,GAASZ,aAAa,qBAAb,GAAqCS,MAAM9C,EAApD;AACAgD,UAAEE,MAAF,GAAU,OAAV;AACAH,WAAGvB,WAAH,CAAewB,CAAf;AACAZ,mBAAWZ,WAAX,CAAuBuB,EAAvB;AAED,OAXW,CAAd;AAYE,UAAII,MAASd,UAAT,2BAAyC7D,WAAWwB,EAAxD;AACA,UAAIoD,QAAQzE,SAAS0E,gBAAT,CAA0B,yBAAuBF,GAAvB,GAA2B,IAArD,CAAZ;AAdC;AAAA;AAAA;;AAAA;AAeD,6BAAcC,KAAd,8HAAqB;AAAA,cAAZE,CAAY;;AACnB,cAAIA,KAAKH,GAAT,EAAc;AACZG,cAAE9C,SAAF,GAAc,aAAd;AACD,WAFD,MAGKvB,QAAQwD,GAAR,CAAYU,MAAM,KAAN,GAAcG,CAA1B;AACN;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBJ;AACJ,GAzBC;AA6BD,CAhCD;;AAkCA;;;AAGAvE,yBAAyB,gCAACwE,QAAD,EAAc;;AAErC,MAAIpE,KAAKX,UAAT,EAAqB;AAAE;AACrB+E,aAAS,IAAT,EAAepE,KAAKX,UAApB;AACA;AACD;AACD,MAAMwB,KAAKwD,mBAAmB,IAAnB,CAAX;AACA,MAAI,CAACxD,EAAL,EAAS;AAAE;AACThB,YAAQ,yBAAR;AACAuE,aAASvE,KAAT,EAAgB,IAAhB;AAED,GAJD,MAIO;AACLmB,aAASsD,mBAAT,CAA6BzD,EAA7B,EAAiC,UAAChB,KAAD,EAAQR,UAAR,EAAuB;AACtDW,WAAKX,UAAL,GAAkBA,UAAlB;AACA,UAAI,CAACA,UAAL,EAAiB;AACfS,gBAAQD,KAAR,CAAcA,KAAd;AACA;AACD;AACDyB;AACA8C,eAAS,IAAT,EAAe/E,UAAf;AAED,KATD;AAUD;AACF,CAvBD;AAwBA;;;AAGAqD,kBAAkB,2BAAuC;AAAA,MAAtC6B,OAAsC,uEAA5BvE,KAAKX,UAAL,CAAgBkF,OAAY;;AACvD,MAAMC,YAAYhF,SAAS2B,cAAT,CAAwB,mBAAxB,CAAlB;;AAGA,MAAI,CAACoD,OAAL,EAAc;AACZ,QAAME,YAAYjF,SAASoC,aAAT,CAAuB,GAAvB,CAAlB;AACA6C,cAAUrD,SAAV,GAAsB,iBAAtB;AACAoD,cAAUnC,WAAV,CAAsBoC,SAAtB;AACA;AACD;AACD,MAAMC,KAAKlF,SAAS2B,cAAT,CAAwB,cAAxB,CAAX;AACAoD,UAAQb,OAAR,CAAgB,kBAAU;AACxBgB,OAAGrC,WAAH,CAAesC,iBAAiBC,MAAjB,CAAf;AACD,GAFD;AAGAJ,YAAUnC,WAAV,CAAsBqC,EAAtB;AACD,CAfD;;AAiBA;;;AAGAC,mBAAmB,0BAACC,MAAD,EAAY;AAC7B,MAAMhB,KAAKpE,SAASoC,aAAT,CAAuB,IAAvB,CAAX;AACA,MAAMJ,OAAOhC,SAASoC,aAAT,CAAuB,GAAvB,CAAb;AACAJ,OAAKH,SAAL,GAAiB,SAAjB;AACAG,OAAKJ,SAAL,GAAiBwD,OAAOpD,IAAxB;AACAoC,KAAGvB,WAAH,CAAeb,IAAf;;AAEA,MAAMqD,OAAOrF,SAASoC,aAAT,CAAuB,GAAvB,CAAb;AACAiD,OAAKxD,SAAL,GAAiB,SAAjB;AACAwD,OAAKzD,SAAL,GAAiBwD,OAAOC,IAAxB;AACAjB,KAAGvB,WAAH,CAAewC,IAAf;;AAEA,MAAMC,SAAStF,SAASoC,aAAT,CAAuB,GAAvB,CAAf;AACAkD,SAAOzD,SAAP,GAAmB,SAAnB;AACAyD,SAAO1D,SAAP,gBAA8BwD,OAAOE,MAArC;AACAlB,KAAGvB,WAAH,CAAeyC,MAAf;;AAEA,MAAMC,WAAWvF,SAASoC,aAAT,CAAuB,GAAvB,CAAjB;AACAmD,WAAS1D,SAAT,GAAqB,YAArB;AACA0D,WAAS3D,SAAT,GAAqBwD,OAAOG,QAA5B;AACAnB,KAAGvB,WAAH,CAAe0C,QAAf;;AAEA,SAAOnB,EAAP;AACD,CAvBD;;AA0BA;;;AAGAS,qBAAqB,4BAAC7C,IAAD,EAAOwD,GAAP,EAAe;AAClC,MAAI,CAACA,GAAL,EACEA,MAAMC,OAAOC,QAAP,CAAgBpB,IAAtB;AACFtC,SAAOA,KAAK2D,OAAL,CAAa,SAAb,EAAwB,MAAxB,CAAP;AACA,MAAMC,QAAQ,IAAIC,MAAJ,UAAkB7D,IAAlB,uBAAd;AAAA,MACE8D,UAAUF,MAAMG,IAAN,CAAWP,GAAX,CADZ;AAEA,MAAI,CAACM,OAAL,EACE,OAAO,IAAP;AACF,MAAI,CAACA,QAAQ,CAAR,CAAL,EACE,OAAO,EAAP;AACF,SAAOE,mBAAmBF,QAAQ,CAAR,EAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAnB,CAAP;AACD,CAXD","file":"restaurant_info.js","sourcesContent":["let restaurant;\r\nvar restMap;\r\nlet apikey = 'pk.eyJ1IjoicGVwcGVyYWRkaWN0IiwiYSI6ImNqa3Y4YmtwdTBvazAza3BhZ20zYnE2aXoifQ.QIBC0lqNjFdfDDL4Qq_neA';\r\n\r\n/**\r\n * Initialize map as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {  \r\n  initMap();\r\n});\r\n\r\n/**\r\n * Initialize leaflet map\r\n */\r\ninitMap = () => {\r\n  fetchRestaurantFromURL((error, restaurant) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n      mapFallback();\r\n    } else {      \r\n      self.restMap = L.map('map', {\r\n        center: [restaurant.latlng.lat, restaurant.latlng.lng],\r\n        zoom: 12,\r\n        scrollWheelZoom: false\r\n      });\r\n      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\r\n        mapboxToken: apikey,\r\n        maxZoom: 18,\r\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\r\n        '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\r\n        'Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        id: 'mapbox.dark',\r\n\r\n      }).addTo(restMap);\r\n      \r\n      fillBreadcrumb();\r\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.restMap);\r\n    }\r\n  });\r\n}  \r\nmapFallback = () => {\r\n  const mapF = document.getElementById(\"map\")\r\n  mapF.innerHTML = \"Sorry, this map application could not be loaded\";\r\n  mapF.className = 'mapFallback'\r\n}\r\n\r\n\r\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\r\nfillRestaurantHTML = (restaurant = self.restaurant) => {\r\n  document.title = restaurant.name + '\\'s information';\r\n  const name = document.getElementById('rest-name');\r\n  name.innerHTML = restaurant.name;\r\n\r\n  const address = document.getElementById('rest-address');\r\n  address.innerHTML = `Address: ${restaurant.address}`;\r\n\r\n  const image = document.getElementById('rest-img');\r\n  const webpimg = document.createElement('source');\r\n  const img = document.createElement('img');\r\n  const imgt = document.createElement('source');\r\n  webpimg.srcset = DBHelper.imageUrlForRestaurant(restaurant) + '.webp';\r\n  webpimg.type = 'image/webp';\r\n  imgt.srcset = DBHelper.imageUrlForRestaurant(restaurant) + '.jpg';\r\n  imgt.type = 'image/jpeg'\r\n\r\n  img.alt = `Image of ${restaurant.name} in ${restaurant.neighborhood}`;\r\n  img.src = DBHelper.imageUrlForRestaurant(restaurant) + '.jpg';\r\n  image.appendChild(webpimg);\r\n  image.appendChild(imgt)\r\n  image.appendChild(img)\r\n\r\n\r\n\r\n  const cuisine = document.getElementById('rest-cuisine');\r\n  cuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n  // fill operating hours\r\n  if (restaurant.operating_hours) {\r\n    fillRestaurantHoursHTML();\r\n  }\r\n  // fill reviews\r\n  fillReviewsHTML();\r\n}\r\n\r\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\r\nfillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n  const hours = document.getElementById('rest-hours');\r\n  for (let key in operatingHours) {\r\n    const row = document.createElement('tr');\r\n\r\n    const day = document.createElement('td');\r\n    day.innerHTML = key;\r\n    row.appendChild(day);\r\n\r\n    const time = document.createElement('td');\r\n    time.innerHTML = operatingHours[key];\r\n    row.appendChild(time);\r\n\r\n    hours.appendChild(row);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\r\nfillBreadcrumb = (restaurant=self.restaurant) => {\r\n  const breadcrumb = document.getElementById('breadcrumb');\r\n  const serverport = `https://${DBHelper.ADDRESS}/`;\r\n  DBHelper.fetchRestaurants((error, restaurants) => {\r\n    if (error) \r\n        console.log(error)\r\n    else {\r\n      const names = Object.entries(restaurants).forEach(\r\n        ([key, value]) => {\r\n\r\n          const li = document.createElement('li');\r\n          const a = document.createElement('a');\r\n          a.innerHTML = `${value.name}`;\r\n          a.href = serverport + 'restaurant.html?id=' + value.id;\r\n          a.target =\"_self\";\r\n          li.appendChild(a);\r\n          breadcrumb.appendChild(li);\r\n\r\n        });\r\n        var uri = `${serverport}restaurant.html?id=${restaurant.id}`;\r\n        var query = document.querySelectorAll('#navi-links a[href=\"'+uri+'\"]');\r\n        for (let i of query) {\r\n          if (i == uri) {\r\n            i.className = 'currentLink';\r\n          }\r\n          else console.log(uri + '   ' + i)\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * Get current restaurant from page URL.\r\n */\r\nfetchRestaurantFromURL = (callback) => {\r\n\r\n  if (self.restaurant) { // restaurant already fetched!\r\n    callback(null, self.restaurant)\r\n    return;\r\n  }\r\n  const id = getParameterByName('id');\r\n  if (!id) { // no id found in URL\r\n    error = 'No restaurant id in URL'\r\n    callback(error, null);\r\n    \r\n  } else {\r\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\r\n      self.restaurant = restaurant;\r\n      if (!restaurant) {\r\n        console.error(error);\r\n        return;\r\n      }\r\n      fillRestaurantHTML();\r\n      callback(null, restaurant)\r\n      \r\n    });\r\n  }\r\n}\r\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\r\nfillReviewsHTML = (reviews = self.restaurant.reviews) => {\r\n  const container = document.getElementById('reviews-container');\r\n\r\n\r\n  if (!reviews) {\r\n    const noReviews = document.createElement('p');\r\n    noReviews.innerHTML = 'No reviews yet!';\r\n    container.appendChild(noReviews);\r\n    return;\r\n  }\r\n  const ul = document.getElementById('reviews-list');\r\n  reviews.forEach(review => {\r\n    ul.appendChild(createReviewHTML(review));\r\n  });\r\n  container.appendChild(ul);\r\n}\r\n\r\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\r\ncreateReviewHTML = (review) => {\r\n  const li = document.createElement('li');\r\n  const name = document.createElement('p');\r\n  name.className = 'revName';\r\n  name.innerHTML = review.name;\r\n  li.appendChild(name);\r\n\r\n  const date = document.createElement('p');\r\n  date.className = 'revDate';\r\n  date.innerHTML = review.date;\r\n  li.appendChild(date);\r\n\r\n  const rating = document.createElement('p');\r\n  rating.className = 'revRate';\r\n  rating.innerHTML = `Rating: ${review.rating}`;\r\n  li.appendChild(rating);\r\n\r\n  const comments = document.createElement('p');\r\n  comments.className = 'revComment';\r\n  comments.innerHTML = review.comments;\r\n  li.appendChild(comments);\r\n\r\n  return li;\r\n}\r\n\r\n\r\n/**\r\n * Get a parameter by name from page URL.\r\n */\r\ngetParameterByName = (name, url) => {\r\n  if (!url)\r\n    url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n    results = regex.exec(url);\r\n  if (!results)\r\n    return null;\r\n  if (!results[2])\r\n    return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}"]}